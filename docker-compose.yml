version: '3.8'

services:
  database:
    image: postgres:latest
    container_name: mini_proj.database
    environment:
      POSTGRES_DB: mini_proj
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    volumes:
      - pg_data:/var/lib/postgresql/data
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U postgres"]
#      interval: 5s
#      timeout: 5s
#      retries: 5
    ports:
      - "5432:5432"

  backend:
    image: n3k14/backend:latest
    container_name: mini_proj.backend
#    depends_on:
#      database:
#        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 5s
      timeout: 3s
      retries: 5

  frontend:
    image: n3k14/frontend:latest
    container_name: mini_proj.frontend
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "3000:3000"

volumes:
  pg_data:
