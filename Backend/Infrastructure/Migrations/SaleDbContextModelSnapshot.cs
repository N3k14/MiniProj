// <auto-generated />
using System;
using System.Collections.Generic;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(SaleDbContext))]
    partial class SaleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("sales")
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.Property<string>("Number")
                        .HasColumnType("text")
                        .HasColumnName("number");

                    b.Property<DateTime>("CargoPickupDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("cargo_pickup_date_time");

                    b.Property<decimal>("CargoWeightInKg")
                        .HasColumnType("numeric")
                        .HasColumnName("cargo_weight_in_kg");

                    b.ComplexProperty<Dictionary<string, object>>("LocationReceiver", "Domain.Entities.Order.LocationReceiver#Location", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("receiver_address");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("receiver_city");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("LocationSender", "Domain.Entities.Order.LocationSender#Location", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("sender_address");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("sender_city");
                        });

                    b.HasKey("Number")
                        .HasName("pk_order");

                    b.ToTable("order", "sales");
                });
#pragma warning restore 612, 618
        }
    }
}
